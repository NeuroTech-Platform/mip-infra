---
# ApplicationSet for auto-discovered federation network policies
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: federation-network-policies
  namespace: argocd-mip-team
  labels:
    app.kubernetes.io/managed-by: argocd
    argocd.instance: mip-team
  annotations:
    argocd.argoproj.io/note: Auto-discovers federations and applies network isolation
      policies
spec:
  generators:
    # Auto-discover federation directories - same pattern as main ApplicationSet
    - matrix:
        generators:
          - git:
              repoURL: git@github.com:NeuroTech-Platform/mip-deployments.git
              revision: dev/initial_setup_for_mip_deployments
              directories:
                # Local federations
                - path: deployments/local/federations/*
                # Hybrid federations  
                - path: deployments/hybrid/federations/*/mip-infrastructure
          - list:
              elements:
                - cluster: https://kubernetes.default.svc
                  namespace: argocd-mip-team
                  clusterName: default
  goTemplate: true
  template:
    metadata:
      name: netpol-{{ if contains "local" .path.path }}{{ .path.basename }}-local{{
        else }}{{ .path.path | dir | base }}-hybrid{{ end }}
      labels:
        app.kubernetes.io/part-of: federation-network-policies
        app.kubernetes.io/managed-by: argocd
    spec:
      project: mip-argo-project-security
      source:
        repoURL: https://github.com/NeuroTech-Platform/mip-infra.git
        targetRevision: dev/initial_setup_for_mip_deployments
        path: common/security/federation
        helm:
          parameters:
            - name: targetNamespace
              value: '{{ if contains "local" .path.path }}{{ .path.basename }}{{ else
                }}{{ .path.path | dir | base }}{{ end }}'
            - name: federationType
              value: '{{ if contains "local" .path.path }}local{{ else }}hybrid{{
                end }}'
      destination:
        server: '{{ .cluster }}'
        namespace: '{{ if contains "local" .path.path }}{{ .path.basename }}{{ else
          }}{{ .path.path | dir | base }}{{ end }}'
      syncPolicy:
        syncOptions: [ApplyOutOfSyncOnly=true]
        automated:
          selfHeal: true
---
# ApplicationSet for common namespace network policies
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: common-network-policies
  namespace: argocd-mip-team
  labels:
    app.kubernetes.io/managed-by: argocd
    argocd.instance: mip-team
  annotations:
    argocd.argoproj.io/note: Deploys network isolation policies to common namespaces
spec:
  generators:
    - list:
        elements:
          - commonNamespace: mip-common-datacatalog
          - commonNamespace: mip-common-security
  goTemplate: true
  template:
    metadata:
      name: netpol-{{ .commonNamespace }}
      labels:
        app.kubernetes.io/part-of: common-network-policies
        app.kubernetes.io/managed-by: argocd
    spec:
      project: mip-argo-project-security
      source:
        repoURL: https://github.com/NeuroTech-Platform/mip-infra.git
        targetRevision: dev/initial_setup_for_mip_deployments
        path: common/security/common-templates
        helm:
          parameters:
            - name: targetNamespace
              value: '{{ .commonNamespace }}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{ .commonNamespace }}'
      syncPolicy:
        syncOptions: [CreateNamespace=true, ApplyOutOfSyncOnly=true]
        automated:
          selfHeal: true
