---
# Namespace isolation policy for {{.Values.targetNamespace}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: federation-namespace-isolation
  namespace: {{.Values.targetNamespace}}
  labels:
    app.kubernetes.io/name: federation-network-policy
    app.kubernetes.io/instance: {{.Release.Name}}
    app.kubernetes.io/managed-by: {{.Release.Service}}
    mip.namespace-type: federation
    mip.federation-type: {{.Values.federationType}}
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow traffic from pods within the same namespace (compatible with all K8s distros)
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{.Values.targetNamespace}}
    # Allow traffic from ArgoCD for management (compatible with all K8s distros)
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{.Values.argoCDNamespace}}
  egress:
    # Allow traffic to pods within the same namespace (compatible with all K8s distros)
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{.Values.targetNamespace}}
    # Allow DNS queries to kube-system (compatible with all K8s distros)
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: {{.Values.systemNamespace}}
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow HTTPS egress for external dependencies
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow HTTP egress for external dependencies
    - to: []
      ports:
        - protocol: TCP
          port: 80
---
# Policy to allow talking from ingress to frontend services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-ingress-nginx-http-https-to-frontend
  namespace: {{.Values.targetNamespace}}
  labels:
    app.kubernetes.io/name: federation-network-policy
    app.kubernetes.io/instance: {{.Release.Name}}
    app.kubernetes.io/managed-by: {{.Release.Service}}
    mip.namespace-type: federation
    mip.federation-type: {{.Values.federationType}}
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes: ["Ingress"]
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: ingress-nginx
    ports:
    - protocol: TCP
      port: http
    - protocol: TCP
      port: https
---
# Default deny policy for {{.Values.targetNamespace}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: federation-default-deny
  namespace: {{.Values.targetNamespace}}
  labels:
    app.kubernetes.io/name: federation-network-policy
    app.kubernetes.io/instance: {{.Release.Name}}
    app.kubernetes.io/managed-by: {{.Release.Service}}
    mip.namespace-type: federation
    mip.federation-type: {{.Values.federationType}}
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress 
