---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: mip-infrastructure
  labels:
    app.kubernetes.io/managed-by: argocd
    argocd.instance: mip-team
spec:
  generators:
    # Generator for deployments paths - uses mip-deployments.git for both discovery and source
    - matrix:
        generators:
          - git:
              repoURL: git@github.com:NeuroTech-Platform/mip-deployments.git
              revision: dev/initial_setup_for_mip_deployments
              directories:
                # Local federations
                - path: deployments/local/federations/*
                # Hybrid federations
                - path: deployments/hybrid/federations/*/mip-infrastructure
          - list:
              elements:
                - cluster: https://kubernetes.default.svc
                  namespace: argocd-mip-team
                  clusterName: default
                  repoURL: git@github.com:NeuroTech-Platform/mip-deployments.git
    # Generator for common paths - uses mip-infra.git for both discovery and source
    - matrix:
        generators:
          - git:
              repoURL: https://github.com/NeuroTech-Platform/mip-infra.git
              revision: dev/initial_setup_for_mip_deployments
              directories:
                # Cluster-wide applications (not for use for the federations, use deployments/shared-apps instead and not declared here)
                - path: common/datacatalog
                - path: common/nginx-ingress
                - path: common/security
          - list:
              elements:
                - cluster: https://kubernetes.default.svc
                  namespace: argocd-mip-team
                  clusterName: default
                  repoURL: https://github.com/NeuroTech-Platform/mip-infra.git
  goTemplate: true  # for | lower
  template:
    metadata:
      # Create a unique name based on both path and cluster
      name: '{{ .path.path | replace "/" "-" | lower | replace "federations-federation-" "" }}'
      labels:
        app.kubernetes.io/part-of: '{{ .clusterName }}.cluster-{{ index .path.segments
          0 }}-{{ if contains "federations" .path.path }}{{ if contains "local" .path.path }}{{ .path.basename | lower }}-local{{ else }}{{ .path.path | dir | base | lower }}-hybrid{{ end }}{{ else }}{{ .path.basename | lower }}{{ end }}'
    spec:
      project: '{{ if contains "federations" .path.path }}mip-argo-project-{{ if contains "local" .path.path }}{{ .path.basename | lower }}{{ else }}{{ .path.path | dir | base | lower }}{{ end }}{{ else }}mip-argo-project-infrastructure{{ end }}'
      source:
        repoURL: '{{ .repoURL }}'
        targetRevision: dev/initial_setup_for_mip_deployments
        path: '{{ .path.path }}'  # ensures we're using the exact path from the Git repository with the original case preserved
        kustomize:
          namePrefix: ''
      destination:
        server: '{{.cluster}}'
        namespace: '{{.namespace}}'
      syncPolicy:
        syncOptions: 
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        managedNamespaceMetadata:
          labels:
            name: '{{ if contains "federations" .path.path }}{{ if contains "local" .path.path }}{{ .path.basename }}{{ else }}{{ .path.path | dir | base }}{{ end }}{{ else }}{{.namespace}}{{ end }}'
            app.kubernetes.io/managed-by: argocd
            '{{ if contains "federations" .path.path }}mip.federation-type{{ else }}mip.namespace-type{{ end }}': '{{ if contains "federations" .path.path }}{{ if contains "local" .path.path }}local{{ else }}hybrid{{ end }}{{ else }}common{{ end }}'
        automated:
          selfHeal: true
